# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    env(OPENAI_API_KEY): '' # Default to empty string, should be set in .env or actual environment

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Factory\MilvusClientFactory: ~

    Milvus\Client:
        factory: ['@App\Factory\MilvusClientFactory', 'create']
        arguments:
            $host: '%env(MILVUS_HOST)%'
            $port: '%env(int:MILVUS_PORT)%'
            $token: '%env(MILVUS_API_KEY)%'

    App\Service\ZillizVectorDBService:
        arguments:
            $milvus: '@Milvus\Client'
            $collectionName: '%env(MILVUS_COLLECTION)%'
            $dimension: 1536

    # Added for OpenAI client and vision service
    OpenAI\Client: # The actual client from the library
        factory: ['OpenAI', 'client']
        arguments:
            - '%env(OPENAI_API_KEY)%'

    App\Service\OpenAIClientAdapter:
        arguments:
            $adaptee: '@OpenAI\Client' # Inject the actual client here

    # Alias the interface to the adapter for autowiring
    App\Service\OpenAIClientInterface: '@App\Service\OpenAIClientAdapter'

    App\Service\OpenAIVisionService:
        # Now autowiring should work with OpenAIClientInterface
        public: true
